openapi: 3.0.1
info:
  title: User Service
  description: 'Example of a user management with its basic operations: create user, delete user, edit user by id, list users and get user by id.'
  version: 1.0.0
servers:
  - url: http://{domain}:{server}/{basePath}
    variables:
      domain:
        default: 'localhost'
      server:
        default: '8080'
      basePath:
        default: 'api/v1'
tags:
  - name: User
    description: Operations to manage users
paths:
  '/users':
    post:
      tags:
        - User
      description: Create new user
      summary: Create new user
      operationId: create
      requestBody:
        $ref: '#/components/requestBodies/UserCreateRequest'
      responses:
        '201':
          description: Successful created user.
        '400':
          description: Validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ValidationErrorResponse'
        '403':
          description: Resource forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ErrorResponse'
components:
  requestBodies:
    UserCreateRequest:
      content:
        application/json:
          schema:
            type: object
            required:
              - firstName
              - lastName
              - age
              - language
              - rank
              - country
              - active
            properties:
              firstName:
                type: string
              lastName:
                type: string
              age:
                type: integer
                format: int32
              language:
                type: string
              rank:
                type: integer
                format: int32
              country:
                type: string
              active:
                type: boolean
  responses:
    ErrorResponse:
      description: Generic error response
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - message
            properties:
              code:
                type: string
              message:
                type: string
    ValidationErrorResponse:
      description: Validation error response
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                $ref: '#/components/schemas/FormErrors'
  schemas:
    FieldErrors:
      required:
        - codes
        - field
      type: object
      properties:
        field:
          type: string
          description: Name of the field
        codes:
          type: array
          description: List of error codes
          items:
            type: string
            description: List of error codes
      description: Errors on each field
    FormErrors:
      required:
        - fields
        - form
      type: object
      properties:
        fields:
          type: array
          description: Errors on each field
          items:
            $ref: '#/components/schemas/FieldErrors'
        form:
          type: array
          description: General form errors or referring to several fields
          items:
            type: string
            description: General form errors or referring to several fields