openapi: 3.0.1
info:
  title: User Service
  description: 'Example of a user management with its basic operations: create user, delete user, edit user by id, list users and get user by id.'
  version: 1.0.0
servers:
  - url: http://{domain}:{server}/{basePath}
    variables:
      domain:
        default: 'localhost'
      server:
        default: '8080'
      basePath:
        default: 'api/v1'
tags:
  - name: User
    description: Operations to manage users
paths:
  '/users':
    post:
      tags:
        - User
      description: Create new user
      summary: Create new user
      operationId: create
      requestBody:
        $ref: '#/components/requestBodies/UserCreateRequest'
      responses:
        '201':
          description: Successful created user.
        '400':
          description: Validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ValidationErrorResponse'
        '403':
          description: Resource forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ErrorResponse'
  '/users/{userId}':
    put:
      tags:
        - User
      description: Update user
      summary: Update user
      operationId: update
      parameters:
        - name: userId
          in: path
          description: User Id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/UserUpdateRequest'
      responses:
        '200':
          description: Successful updated user.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/UserInfoResponse'
        '400':
          description: Validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ValidationErrorResponse'
        '403':
          description: Resource forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ErrorResponse'
    delete:
      tags:
        - User
      description: Delete user
      summary: Delete user
      operationId: delete
      parameters:
        - name: userId
          in: path
          description: User Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful delete user.
        '403':
          description: Resource forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ErrorResponse'
        '404':
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ErrorResponse'
  components:
  requestBodies:
    UserCreateRequest:
      content:
        application/json:
          schema:
            type: object
            required:
              - firstName
              - lastName
              - age
              - language
              - rank
              - country
              - active
            properties:
              firstName:
                type: string
              lastName:
                type: string
              age:
                type: integer
                format: int32
              language:
                type: string
              rank:
                type: integer
                format: int32
              countryId:
                type: integer
                format: int32
              active:
                type: boolean
    UserUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            required:
              - age
              - language
              - rank
              - country
              - active
            properties:
              age:
                type: integer
                format: int32
              language:
                type: string
              rank:
                type: integer
                format: int32
              country:
                type: integer
                format: int32
              active:
                type: boolean

  responses:
    ErrorResponse:
      description: Generic error response
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - message
              - details
            properties:
              code:
                type: string
              message:
                type: string
              details:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetails'
    ValidationErrorResponse:
      description: Validation error response
      content:
        application/json:
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                $ref: '#/components/schemas/FormErrors'
    UserInfoResponse:
      description: User Information
      content:
        application/json:
          schema:
            type: object
            required:
              - user
            properties:
              user:
                $ref: '#/components/schemas/UserResponse'
  schemas:
    FieldErrors:
      required:
        - codes
        - field
      type: object
      properties:
        field:
          type: string
          description: Name of the field
        codes:
          type: array
          description: List of error codes
          items:
            type: string
            description: List of error codes
      description: Errors on each field
    FormErrors:
      required:
        - fields
        - form
      type: object
      properties:
        fields:
          type: array
          description: Errors on each field
          items:
            $ref: '#/components/schemas/FieldErrors'
        form:
          type: array
          description: General form errors or referring to several fields
          items:
            type: string
            description: General form errors or referring to several fields
    ErrorDetails:
      type: object
      properties:
        value:
          type: string
        message:
          type: string
    UserResponse:
      type: object
      required:
        - firstName
        - lastName
        - age
        - language
        - rank
        - country
        - active
      properties:
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          format: int32
        language:
          type: string
        rank:
          type: integer
          format: int32
        countryId:
          type: integer
          format: int32
        active:
          type: boolean